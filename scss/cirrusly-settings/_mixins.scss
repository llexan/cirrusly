/*------------------------------------*\
    #Mixins
\*------------------------------------*/
/** 
 * Slightly lighten a color
 * @access public
 * @param {Color} $color - color to tint
 * @param {Number} $percentage - percentage of `$color` in returned color
 * @return {Color}
 * https://css-tricks.com/snippets/sass/tint-shade-functions/
 */

@function tint($color, $percentage) {
  @return mix(white, $color, $percentage);
}



/** 
 * Slightly darken a color
 * @access public
 * @param {Color} $color - color to tint
 * @param {Number} $percentage - percentage of `$color` in returned color
 * @return {Color}
 * https://css-tricks.com/snippets/sass/tint-shade-functions/
 */

@function shade($color, $percentage) {
  @return mix(black, $color, $percentage);
}



/**
 * Mixin to manage responsive breakpoints
 * @author Hugo Giraudel
 * @param {String} $breakpoint - Breakpoint name
 * @require $breakpoints set in "cirrusly-settings/_variables.scss"
 * https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
 */

@mixin breakpoint($breakpoint) {
  @if (map-get($breakpoints, $breakpoint)) == null {
    @content;
  } @else {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }
}

@mixin generate-breakpoint-prefixes {
 @each $breakpoint-name, $breakpoint-value in $breakpoints {
   $breakpoint-prefix: "#{$breakpoint-name}-";
   
   @include breakpoint($breakpoint-name) {
     
     // Columns
     .#{$breakpoint-prefix} {
       @content;
     }
   }
 }
}



/**
 * Clearfix mixin brought to you by bourbon.io!
 */

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}




